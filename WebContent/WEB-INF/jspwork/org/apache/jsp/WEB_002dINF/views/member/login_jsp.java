/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-07-17 03:02:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.model.vo.Employee;
import common.utill.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/views/member/../common/meta.jsp", Long.valueOf(1593265000000L));
    _jspx_dependants.put("/WEB-INF/views/member/../common/header.jsp", Long.valueOf(1593330696000L));
    _jspx_dependants.put("/WEB-INF/views/member/../common/footerScript.jsp", Long.valueOf(1594450848000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("common.utill");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Employee");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	Employee empLoggedIn = (Employee) session.getAttribute("empLoggedIn");
	String contextPath = request.getContextPath();
	
	//쿠키관련
	Cookie[] cookies = request.getCookies();
	boolean saveIdChecked = false;
	String saveIdValue = "";
	
	if (cookies != null) {
		for (Cookie c : cookies) {
			String k = c.getName();
			String v = c.getValue();
			//System.out.println(k + "=" + v);
			
			//쿠키에서 saveId(아이디저장 체크했을때) 가  true 이면
			if ("saveId".equals(k) && "true".equals(v)) {
				saveIdChecked = true;
			}
			//쿠키에서 사원번호가  있으면 저장
			if ("eCode".equals(k) && !Utils.isEmpty(v)) {
				saveIdValue = v; //eCode;
			}
		}
	
	}

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<!-- Required meta tags -->\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<!-- Required meta tags -->\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">");
      out.write("\r\n");
      out.write("<title>Login</title>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<!-- plugins:css -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/vendors/mdi/css/materialdesignicons.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/vendors/css/vendor.bundle.base.css\">\r\n");
      out.write("<!-- endinject -->\r\n");
      out.write("<!-- Plugin css for this page -->\r\n");
      out.write("<!-- End plugin css for this page -->\r\n");
      out.write("<!-- inject:css -->\r\n");
      out.write("<!-- endinject -->\r\n");
      out.write("<!-- Layout styles -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/css/style.css\">\r\n");
      out.write("<!-- End layout styles -->\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/images/favicon.png\" />\r\n");
      out.write("<!-- font 적용-->\r\n");
      out.write("<!-- 한글 폰트 적용 : 해당 태그 클래스에 'kor' 기입 -->\r\n");
      out.write("<!-- font-family: 'Noto Sans KR', sans-serif; -->\r\n");
      out.write("<!-- font-weight은 100, 300, 400(default), 500, 700, 900 가능합니다. -->\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<style>\r\n");
      out.write("\t.kor {\r\n");
      out.write("\t\tfont-family: 'Noto Sans KR', sans-serif;\r\n");
      out.write("\t\tcolor: #343A40;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("<script  src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\t$(function() {\t\t\r\n");
      out.write("\t\t$(\"#eCode\").val(\"");
      out.print(saveIdValue);
      out.write("\");             //사원번호 초기값 설정\r\n");
      out.write("\t\t$(\"#saveId\").prop(\"checked\",");
      out.print(saveIdChecked);
      out.write("); //아이디저장 초기값 설정\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#loginFrm\").submit(function() {\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//아이디저장 체크돼 있으면 쿠키 설정\r\n");
      out.write("\t\t\tif($(\"#saveId\").is(\":checked\")){\r\n");
      out.write("\t\t\t\tsetCookie(\"saveId\", true, 90);\r\n");
      out.write("\t\t\t\tsetCookie(\"eCode\", $(\"#eCode\").val(), 90);\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t//체크없으면 쿠키값 초기화\r\n");
      out.write("\t\t\t\tsetCookie(\"saveId\", false, 90);\r\n");
      out.write("\t\t\t\tsetCookie(\"eCode\", \"\", 90);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tlet $eCode = $(\"#eCode\");\r\n");
      out.write("\t\t\tlet $ePassword = $(\"#ePassword\");\r\n");
      out.write("\r\n");
      out.write("\t\t\tif ($.trim($eCode.val()).length == 0) {\r\n");
      out.write("\t\t\t\talert(\"사번을 입력하세요.\");\r\n");
      out.write("\t\t\t\t$eCode.val(\"\"); //값 초기화\r\n");
      out.write("\t\t\t\t$eCode.focus();\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t;\r\n");
      out.write("\r\n");
      out.write("\t\t\tif ($.trim($ePassword.val()).length == 0) {\r\n");
      out.write("\t\t\t\talert(\"비밀번호를 입력하세요.\");\r\n");
      out.write("\t\t\t\t$ePassword.val(\"\"); //값 초기화\r\n");
      out.write("\t\t\t\t$ePassword.focus();\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t;\r\n");
      out.write("\r\n");
      out.write("\t\t\t//사번 유효성검사 : 숫자만 가능 \r\n");
      out.write("\t\t\tvar eCodeCheck = /^\\d+/;\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (!eCodeCheck.test($eCode.val())) {\r\n");
      out.write("\t\t\t\talert(\"사번은 숫자만 가능합니다.\");\r\n");
      out.write("\t\t\t\t$eCode.val(\"\"); //값 초기화\r\n");
      out.write("\t\t\t\t$eCode.focus();\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t;\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\tfunction submitForm() {\r\n");
      out.write("\r\n");
      out.write("\t\talert(\"saveId checked=\"+$(\"#saveId\").is(\":checked\"));\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif($(\"#saveId\").is(\":checked\")){\r\n");
      out.write("\t\t\tsetCookie(\"saveId\", true, 7);\r\n");
      out.write("\t\t\tsetCookie(\"eCode\", $(\"#eCode\").val(), 7);\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tsetCookie(\"saveId\", false, 7);\r\n");
      out.write("\t\t\tsetCookie(\"eCode\", \"\", 7);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t// 쿠키 생성 함수\r\n");
      out.write("\tfunction setCookie(cName, cValue, cDay) {\r\n");
      out.write("\t\tvar expire = new Date();\r\n");
      out.write("\t\texpire.setDate(expire.getDate() + cDay);\r\n");
      out.write("\t\tcookies = cName + '=' + escape(cValue) + '; path=/ '; // 한글 깨짐을 막기위해 escape(cValue)를 합니다.\r\n");
      out.write("\t\tif (typeof cDay != 'undefined')\r\n");
      out.write("\t\t\tcookies += ';expires=' + expire.toGMTString() + ';';\r\n");
      out.write("\t\tdocument.cookie = cookies;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 쿠키 가져오기 함수\r\n");
      out.write("\tfunction getCookie(cName) {\r\n");
      out.write("\t\tcName = cName + '=';\r\n");
      out.write("\t\tvar cookieData = document.cookie;\r\n");
      out.write("\t\tvar start = cookieData.indexOf(cName);\r\n");
      out.write("\t\tvar cValue = '';\r\n");
      out.write("\t\tif (start != -1) {\r\n");
      out.write("\t\t\tstart += cName.length;\r\n");
      out.write("\t\t\tvar end = cookieData.indexOf(';', start);\r\n");
      out.write("\t\t\tif (end == -1)\r\n");
      out.write("\t\t\t\tend = cookieData.length;\r\n");
      out.write("\t\t\tcValue = cookieData.substring(start, end);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\treturn unescape(cValue);\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container-scroller\">\r\n");
      out.write("\t\t<div class=\"container-fluid page-body-wrapper full-page-wrapper\">\r\n");
      out.write("\t\t\t<div class=\"content-wrapper d-flex align-items-center auth\">\r\n");
      out.write("\t\t\t\t<div class=\"row flex-grow\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-lg-4 mx-auto\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"auth-form-light text-left p-5\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"brand-logo\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<img\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsrc=\"");
      out.print(contextPath);
      out.write("/resources/bootstrap/images/logo.png\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<h4>반갑습니다 :)</h4>\r\n");
      out.write("\t\t\t\t\t\t\t<h6 class=\"font-weight-light kor\">로그인 후 이용가능합니다.</h6>\r\n");
      out.write("\t\t\t\t\t\t\t<form class=\"pt-3\" action=\"");
      out.print(contextPath);
      out.write("/member/login\"\r\n");
      out.write("\t\t\t\t\t\t\t\tid=\"loginFrm\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control form-control-lg\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tid=\"eCode\" name=\"eCode\" placeholder=\"사번\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"password\" class=\"form-control form-control-lg\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tid=\"ePassword\" name=\"ePassword\" placeholder=\"비밀번호\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"mt-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"로그인\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-block btn-gradient-primary btn-lg font-weight-medium auth-form-btn kor\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div\r\n");
      out.write("\t\t\t\t\t\t\t\t\tclass=\"my-2 d-flex justify-content-between align-items-center\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-check\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label class=\"form-check-label text-muted\" for=\"saveId\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"form-check-input kor\" id=\"saveId\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t아이디 저장 \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<a class=\"auth-link text-black kor\" href=\"\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tonclick=\"window.open('");
      out.print(contextPath);
      out.write("/member/passwordFinder','_blank','top=1,left=500,width=500,height=600')\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t비밀번호찾기</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t\t<!-- <div class=\"text-center mt-4 font-weight-light kor\"> 아직 계정이 없으신가요? <a href=\"register.jsp\" class=\"text-primary kor\">회원가입</a> -->\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- content-wrapper ends -->\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- page-body-wrapper ends -->\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<!-- plugins:js -->\r\n");
      out.write("<script src=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/vendors/js/vendor.bundle.base.js\"></script>\r\n");
      out.write("<!-- endinject -->\r\n");
      out.write("<!-- Plugin js for this page -->\r\n");
      out.write("<script src=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/vendors/chart.js/Chart.min.js\"></script>\r\n");
      out.write("<!-- End plugin js for this page -->\r\n");
      out.write("<!-- inject:js -->\r\n");
      out.write("<script src=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/js/off-canvas.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/js/hoverable-collapse.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/js/misc.js\"></script>\r\n");
      out.write("<!-- endinject -->\r\n");
      out.write("<!-- Custom js for this page -->\r\n");
      out.write("<script src=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/js/dashboard.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/js/todolist.js\"></script>\r\n");
      out.write("  <script>\r\n");
      out.write("  var topEle = $('#topBtn');\r\n");
      out.write("  var delay = 1000;\r\n");
      out.write("  \r\n");
      out.write("  topEle.on('click', function() {\r\n");
      out.write("    $('html, body').stop().animate({scrollTop: 0}, delay);\r\n");
      out.write("  });\r\n");
      out.write("  </script>\r\n");
      out.write("<!-- End custom js for this page -->");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
