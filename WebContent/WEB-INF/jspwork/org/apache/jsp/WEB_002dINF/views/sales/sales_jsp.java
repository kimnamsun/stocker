/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-07-19 07:35:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.sales;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import java.util.ArrayList;
import sales.model.vo.MostSoldProduct;
import sales.model.vo.RankedShop;
import sales.model.vo.RankedTransfer;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map.Entry;
import java.util.Map;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.text.DecimalFormat;
import member.model.vo.Employee;
import member.model.service.EmpService;
import member.model.vo.Employee;

public final class sales_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/views/sales/../common/meta.jsp", Long.valueOf(1593265000000L));
    _jspx_dependants.put("/WEB-INF/views/sales/../common/header.jsp", Long.valueOf(1593330696000L));
    _jspx_dependants.put("/WEB-INF/views/sales/../common/footer.jsp", Long.valueOf(1594349126000L));
    _jspx_dependants.put("/WEB-INF/views/sales/../common/sidebar.jsp", Long.valueOf(1595039526000L));
    _jspx_dependants.put("/WEB-INF/views/sales/../common/navbar.jsp", Long.valueOf(1595144081730L));
    _jspx_dependants.put("/WEB-INF/views/sales/../common/footerScript.jsp", Long.valueOf(1594450848000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Iterator");
    _jspx_imports_classes.add("sales.model.vo.MostSoldProduct");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.DecimalFormat");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("sales.model.vo.RankedTransfer");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("sales.model.vo.RankedShop");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("java.util.Map.Entry");
    _jspx_imports_classes.add("member.model.vo.Employee");
    _jspx_imports_classes.add("member.model.service.EmpService");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
	DecimalFormat formatter = new DecimalFormat("#,###,###,###");
	String contextPath = request.getContextPath();

      out.write('\n');

	int thisYear = (int)request.getAttribute("thisYear");

      out.write('\n');

	int thisMonth = (int)request.getAttribute("thisMonth"); 

      out.write('\n');
 List<RankedShop> rshops = (List<RankedShop>)request.getAttribute("RankedShops"); 
   List<MostSoldProduct> mproducts = (List<MostSoldProduct>)request.getAttribute("MostSold");
   List<RankedTransfer> rtransfer1 = (List<RankedTransfer>)request.getAttribute("rankingTransfer1");
   List<RankedTransfer> rtransfer2 = (List<RankedTransfer>)request.getAttribute("rankingTransfer2");
   HashMap<String, Integer> scategory = (HashMap<String, Integer>)request.getAttribute("StockCategory");
   HashMap<String, Integer> stheme = (HashMap<String, Integer>)request.getAttribute("StockTheme");
   HashMap<Integer, Integer> ainbound1= (HashMap<Integer, Integer>)request.getAttribute("AnnualInbound1");
   HashMap<Integer, Integer> ainbound2= (HashMap<Integer, Integer>)request.getAttribute("AnnualInbound2");
   HashMap<Integer, Integer> aoutbound1= (HashMap<Integer, Integer>)request.getAttribute("AnnualOutbound1");
   HashMap<Integer, Integer> aoutbound2= (HashMap<Integer, Integer>)request.getAttribute("AnnualOutbound2");
   HashMap<Integer, Integer> annualreven1 = (HashMap<Integer, Integer>)request.getAttribute("AnnualRevenue1");
   HashMap<Integer, Integer> annualreven2 = (HashMap<Integer, Integer>)request.getAttribute("AnnualRevenue2");
   HashMap<Integer, Integer> monthreven1 = (HashMap<Integer, Integer>)request.getAttribute("MonthlyRevenue1");
   HashMap<Integer, Integer> monthreven2 = (HashMap<Integer, Integer>)request.getAttribute("MonthlyRevenue2");
   HashMap<String, Integer> dailyreven1 = (HashMap<String, Integer>)request.getAttribute("DailyRevenue1");
   HashMap<String, Integer> dailyreven2 = (HashMap<String, Integer>)request.getAttribute("DailyRevenue2");
   

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("  <head>\n");
      out.write("\t ");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<!-- Required meta tags -->\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">");
      out.write("\n");
      out.write("\t <title>통계</title>\n");
      out.write("\t ");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<!-- plugins:css -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/vendors/mdi/css/materialdesignicons.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/vendors/css/vendor.bundle.base.css\">\r\n");
      out.write("<!-- endinject -->\r\n");
      out.write("<!-- Plugin css for this page -->\r\n");
      out.write("<!-- End plugin css for this page -->\r\n");
      out.write("<!-- inject:css -->\r\n");
      out.write("<!-- endinject -->\r\n");
      out.write("<!-- Layout styles -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/css/style.css\">\r\n");
      out.write("<!-- End layout styles -->\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/images/favicon.png\" />\r\n");
      out.write("<!-- font 적용-->\r\n");
      out.write("<!-- 한글 폰트 적용 : 해당 태그 클래스에 'kor' 기입 -->\r\n");
      out.write("<!-- font-family: 'Noto Sans KR', sans-serif; -->\r\n");
      out.write("<!-- font-weight은 100, 300, 400(default), 500, 700, 900 가능합니다. -->\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<style>\r\n");
      out.write("\t.kor {\r\n");
      out.write("\t\tfont-family: 'Noto Sans KR', sans-serif;\r\n");
      out.write("\t\tcolor: #343A40;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("<script  src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\n");
      out.write("\t<style>\n");
      out.write("\t.popup_panel { display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: 100;}\n");
      out.write("\t.popup_panel div.popup_bg { position: absolute; top: 0; left: 0; width: 100%; height: 100%; background:#000; opacity:.5; filter:alpha(opacity=50); }\n");
      out.write("\t.popup_panel div.popup_contents { position: absolute; top: 30%; left: 50%; width:600px; hight:800px; border:2px solid #b66dff; background-color:#fff; }\n");
      out.write("\t.popup_contents2 {display:inline; float: right; margin: 30px; margin-top: 63px; margin-right: 38px;}\n");
      out.write("\t.stock-tr {\n");
      out.write("\t/* font-family: 고딕; */\n");
      out.write("\tfont-weight: bold;\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("    #bcard {\n");
      out.write("        width: 80%;\n");
      out.write("        margin: 0 auto;\n");
      out.write("        padding: 20px;\n");
      out.write("    }\n");
      out.write("\t\t\n");
      out.write("</style>\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.min.js\"></script>\n");
      out.write("  </head>\n");
      out.write("  <body>\n");
      out.write("\n");
      out.write("<div class=\"container-scroller\">\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
 
	Employee empLoggedIn = (Employee) session.getAttribute("empLoggedIn");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<!-- partial:partials/_navbar.html -->\r\n");
      out.write("<nav class=\"navbar default-layout-navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n");
      out.write("  <div class=\"text-center navbar-brand-wrapper d-flex align-items-center justify-content-center\">\r\n");
      out.write("    <a class=\"navbar-brand brand-logo\" href=\"");
      out.print( request.getContextPath() );
      out.write("/index.jsp\"><img src=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/images/logo.png\" alt=\"logo\" /></a>\r\n");
      out.write("    <a class=\"navbar-brand brand-logo-mini\" href=\"");
      out.print( request.getContextPath() );
      out.write("/index.jsp\"><img src=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/images/logo-mini.svg\" alt=\"logo\" /></a>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"navbar-menu-wrapper d-flex align-items-stretch\">\r\n");
      out.write("    <button class=\"navbar-toggler navbar-toggler align-self-center\" type=\"button\" data-toggle=\"minimize\">\r\n");
      out.write("      <span class=\"mdi mdi-menu\"></span>\r\n");
      out.write("    </button>\r\n");
      out.write("    <div class=\"search-field d-none d-md-block\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <ul class=\"navbar-nav navbar-nav-right\">\r\n");
      out.write("      <li class=\"nav-item nav-profile dropdown\" style=\"margin-top: 2%;\">\r\n");
      out.write("        <a class=\"nav-link dropdown-toggle\" id=\"profileDropdown\" href=\"#\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n");
      out.write("          <div class=\"nav-profile-text\" >\r\n");
      out.write("          ");
if(empLoggedIn != null){
      out.write("\r\n");
      out.write("          <p class=\"mb-1 text-black\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/member/infoView?eCode=");
      out.print(empLoggedIn.geteCode());
      out.write('\'');
      out.write('"');
      out.write('>');
      out.print(empLoggedIn.geteDept());
      out.write(" <strong>");
      out.print(empLoggedIn.geteName() );
      out.write("</strong></p>\r\n");
      out.write("          ");
}
      out.write("\r\n");
      out.write("          </div>\r\n");
      out.write("        </a>\r\n");
      out.write("      </li>\r\n");
      out.write("      <li class=\"nav-item d-none d-lg-block full-screen-link\">\r\n");
      out.write("        <a class=\"nav-link\">\r\n");
      out.write("          <i class=\"mdi mdi-fullscreen\" id=\"fullscreen-button\"></i>\r\n");
      out.write("        </a>\r\n");
      out.write("      </li>\r\n");
      out.write("\t  <li class=\"nav-item\">\r\n");
      out.write("\t    <a class=\"nav-link\" href=\"");
      out.print( request.getContextPath());
      out.write("/board/boardList\">\r\n");
      out.write("\t  \t<i class=\"mdi mdi-bulletin-board\"></i>\r\n");
      out.write("\t    </a>\r\n");
      out.write("\t  </li>\r\n");
      out.write("      <li class=\"nav-item nav-logout d-none d-lg-block\">\r\n");
      out.write("        <a class=\"nav-link\" href=\"");
      out.print( request.getContextPath());
      out.write("/member/logout\">\r\n");
      out.write("          <i class=\"mdi mdi-power\"></i>\r\n");
      out.write("        </a>\r\n");
      out.write("      </li>\r\n");
      out.write("      <li class=\"nav-item nav-settings d-none d-lg-block\">\r\n");
      out.write("        <a class=\"nav-link\" href=\"#\">\r\n");
      out.write("          <i class=\"mdi mdi-format-line-spacing\"></i>\r\n");
      out.write("        </a>\r\n");
      out.write("      </li>\r\n");
      out.write("    </ul>\r\n");
      out.write("    <button class=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" data-toggle=\"offcanvas\">\r\n");
      out.write("      <span class=\"mdi mdi-menu\"></span>\r\n");
      out.write("    </button>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>");
      out.write("\n");
      out.write("      <!-- partial -->\n");
      out.write("      <div class=\"container-fluid page-body-wrapper\">\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 
	Employee user = (Employee) session.getAttribute("empLoggedIn");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<!-- partial:partials/_sidebar.html -->\r\n");
      out.write("<nav class=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n");
      out.write("  <ul class=\"nav\">\r\n");
      out.write("    <li class=\"nav-item\">\r\n");
      out.write("      <a class=\"nav-link\" href=\"");
      out.print( request.getContextPath() );
      out.write("\">\r\n");
      out.write("        <span class=\"menu-title kor\">메 인</span>\r\n");
      out.write("        <i class=\"mdi mdi-home menu-icon\"></i>\r\n");
      out.write("      </a>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li class=\"nav-item\">\r\n");
      out.write("      <a class=\"nav-link\" data-toggle=\"collapse\" href=\"#product\" aria-expanded=\"false\" aria-controls=\"ui-basic\">\r\n");
      out.write("        <span class=\"menu-title kor\">상품관리</span>\r\n");
      out.write("        <i class=\"menu-arrow\"></i>\r\n");
      out.write("        <i class=\"mdi mdi-basket menu-icon\"></i>\r\n");
      out.write("      </a>\r\n");
      out.write("      <div class=\"collapse\" id=\"product\">\r\n");
      out.write("        <ul class=\"nav flex-column sub-menu\">\r\n");
      out.write("          <li class=\"nav-item\"> <a class=\"nav-link kor\" href=\"");
      out.print( request.getContextPath() );
      out.write("/product/warehousing?currentPage=1\">입고</a></li>\r\n");
      out.write("          <li class=\"nav-item\"> <a class=\"nav-link kor\" href=\"");
      out.print( request.getContextPath() );
      out.write("/product/beReleased\">출고</a></li>\r\n");
      out.write("          <li class=\"nav-item\"> <a class=\"nav-link kor\" href=\"");
      out.print( request.getContextPath() );
      out.write("/product/stk\">재고</a></li> \r\n");
      out.write("        </ul>\r\n");
      out.write("      </div>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li class=\"nav-item\">\r\n");
      out.write("      <a class=\"nav-link\" data-toggle=\"collapse\" href=\"#order\" aria-expanded=\"false\" aria-controls=\"ui-basic\">\r\n");
      out.write("        <span class=\"menu-title kor\">거래관리</span>\r\n");
      out.write("        <i class=\"menu-arrow\"></i>\r\n");
      out.write("        <i class=\"mdi mdi-barcode-scan menu-icon\"></i>\r\n");
      out.write("      </a>\r\n");
      out.write("      <div class=\"collapse\" id=\"order\">\r\n");
      out.write("        <ul class=\"nav flex-column sub-menu\">\r\n");
      out.write("          <li class=\"nav-item\"> <a class=\"nav-link kor\" href=\"");
      out.print( request.getContextPath() );
      out.write("/order/ordr?currentPage=1\">발주</a></li>\r\n");
      out.write("          <li class=\"nav-item\"> <a class=\"nav-link kor\" href=\"");
      out.print( request.getContextPath() );
      out.write("/order/transfer\">이송</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </div>\r\n");
      out.write("    </li>\r\n");
      out.write("       <li class=\"nav-item\">\r\n");
      out.write("        <a class=\"nav-link\" href=\"");
      out.print( request.getContextPath() );
      out.write("/sales\">\r\n");
      out.write("        <span class=\"menu-title kor\">통 계</span>\r\n");
      out.write("        <i class=\"menu-arrow\"></i>\r\n");
      out.write("        <i class=\"mdi mdi-chart-line menu-icon\"></i>\r\n");
      out.write("      </a>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li class=\"nav-item\">\r\n");
      out.write("      <a class=\"nav-link\" href=\"");
      out.print( request.getContextPath() );
      out.write("/approval?currentPage=1\">\r\n");
      out.write("        <span class=\"menu-title kor\">결재진행</span>\r\n");
      out.write("        <i class=\"menu-arrow\"></i>\r\n");
      out.write("        <i class=\"mdi mdi-script menu-icon\"></i>\r\n");
      out.write("      </a>\r\n");
      out.write("    </li>\r\n");
      out.write("  </ul>\r\n");
      out.write("</nav>");
      out.write("\n");
      out.write("      <!-- partial -->\n");
      out.write("        <div class=\"main-panel\">\n");
      out.write("          <div class=\"content-wrapper\">\n");
      out.write("              <i class=\"mdi mdi-close\" id=\"bannerClose\" style=\"display: none;\"></i>\n");
      out.write("            \t<div class=\"page-header\">\n");
      out.write("             \t <h3 class=\"page-title kor\">\n");
      out.write("                \t<span class=\"page-title-icon bg-gradient-primary text-white mr-2\">\n");
      out.write("                  \t\t<i class=\"mdi mdi-chart-line\"></i>\n");
      out.write("                \t</span> 통계 \n");
      out.write("                 </h3>\n");
      out.write("          \t\t</div>\n");
      out.write("            <br>\n");
      out.write("\n");
      out.write("            \n");
      out.write("         <div class=\"col-md-10 offset-md-1 grid-margin\">\n");
      out.write("           <div class=\"card\">\n");
      out.write("           \t <div class=\"card-body-wrapper\">\n");
      out.write("           \t\t\t<div class=\"card-body\" id=\"bcard\">\n");
      out.write("            \t\t<h2 class=\"offset-md-1\">\n");
      out.write("            \t\t\t<button class=\"btn btn-gradient-primary font-weight-bold\" id=\"btn1\" onclick=\"updateYearly()\">연간 매출 추이</button>\n");
      out.write("            \t\t\t<button class=\"btn btn-gradient-primary font-weight-bold\" id=\"btn2\" onclick=\"updateMonthly()\">월간 통합 매출 추이</button>\n");
      out.write("            \t\t\t<button class=\"btn btn-gradient-primary font-weight-bold\" id=\"btn4\" onclick=\"updateDaily()\">일간 매출 추이</button> \n");
      out.write("            \t\t\t</h2>\n");
      out.write("\t\t\t \t\t </div>\n");
      out.write("\t\t\t\t\t \t<canvas id=\"rchart\"></canvas>\n");
      out.write(" \t\t\t\t\t   \n");
      out.write(" \t\t\t  </div>\n");
      out.write(" \t\t\t</div>\n");
      out.write(" \t\t</div>\n");
      out.write(" \t\t\t\t<br>\n");
      out.write(" \t\t\t\t\n");
      out.write("<div class=\"row offset-md-1\">\n");
      out.write("<!--   <div class=\"col-md-12 grid-margin stretch-card\"> -->\n");
      out.write("<!--     <div class=\"card\"> -->\n");
      out.write("<!--       <div class=\"card-body\">  -->\n");
      out.write(" \t  <div class=\"col-md-5 stretch-card grid-margin\">\n");
      out.write("     \t <div class=\"card bg-gradient-danger card-img-holder text-white\">\n");
      out.write("     \t\t <div class=\"card-body\">\n");
      out.write("        \t\t <img src=\"");
      out.print(  contextPath );
      out.write("/resources/bootstrap/images/dashboard/circle.svg\" class=\"card-img-absolute\" alt=\"circle-image\" />\n");
      out.write("          \t \t <h4 class=\"font-weight-normal mb-3\">");
      out.print(thisYear );
      out.write('년');
      out.write(' ');
      out.print(thisMonth );
      out.write("월 총 생산입고 수량<i class=\"mdi mdi-chart-line mdi-24px float-right\"></i>\n");
      out.write("           \t  \t </h4>\n");
      out.write("           \t  \t <br>\n");
      out.write("              \t <h1 class=\"mb-5\">\n");
      out.write("              \t ");
      out.print(formatter.format((int)request.getAttribute("countInbound")));
      out.write(" 개</h1>\n");
      out.write("         \t </div>\n");
      out.write("         </div>\n");
      out.write("      </div>\n");
      out.write("\n");
      out.write(" \t   <div class=\"col-md-6 grid-margin stretch-card\">  \n");
      out.write(" \t   \t\t<div class=\"card\">\n");
      out.write("       \t\t   <div class=\"card-body\">      \n");
      out.write("\t\t\t\t <canvas id=\"inbound\" class=\"mt-2\"></canvas>             \n");
      out.write("      \t\t   </div>\n");
      out.write(" \t\t\t</div>\n");
      out.write("\t   </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"row offset-md-1\">\n");
      out.write("<!-- \t\t<div class=\"col-md-12 stretch-card grid-margin\"> -->\n");
      out.write("<!-- \t\t<div class=\"card offset-md-1\"> -->\n");
      out.write("<!-- \t\t\t<div class=\"card-body\"> -->\n");
      out.write("\t<div class=\"col-md-5 stretch-card grid-margin\">\n");
      out.write("\t  <div class=\"card bg-gradient-info card-img-holder text-white\">\n");
      out.write("         <div class=\"card-body\">\n");
      out.write("            <img src=\"");
      out.print(  contextPath );
      out.write("/resources/bootstrap/images/dashboard/circle.svg\" class=\"card-img-absolute\" alt=\"circle-image\" />\n");
      out.write("            <h4 class=\"font-weight-normal mb-3\">");
      out.print(thisYear);
      out.write('년');
      out.write(' ');
      out.print(thisMonth );
      out.write("월 총 판매출고 수량<i class=\"mdi mdi-bookmark-outline mdi-24px float-right\"></i>\n");
      out.write("            </h4>\n");
      out.write("            <br>\n");
      out.write("            <h1 class=\"mb-5\">");
      out.print(formatter.format((int)request.getAttribute("countOutbound")) );
      out.write(" 개</h1>\n");
      out.write("         </div>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("          \n");
      out.write("\n");
      out.write("  \t<div class=\"col-md-6 stretch-card grid-margin\">\n");
      out.write("    \t<div class=\"card\">\n");
      out.write("       \t\t<div class=\"card-body\">    \n");
      out.write("\t\t\t <canvas id=\"outbound\" class=\"mt-2\"></canvas>                    \t\n");
      out.write("       \t\t</div>\n");
      out.write(" \t\t  </div>\n");
      out.write("  \t\t</div>\n");
      out.write("  \t</div>\n");
      out.write("\n");
      out.write(" <div class=\"row\">\n");
      out.write("     <div class=\"col-md-6 grid-margin stretch-card\">\n");
      out.write("        <div class=\"card\">\n");
      out.write("          <div class=\"card-body\">\n");
      out.write("            <div class=\"clearfix\">\n");
      out.write("              <h4 class=\"card-title float-left\">카테고리 실시간 재고 현황</h4>\n");
      out.write("<!--                       <div id=\"visit-sale-chart-legend\" class=\"rounded-legend legend-horizontal legend-top-right float-right\"></div> -->\n");
      out.write("            </div>\n");
      out.write("                <canvas id=\"c_stock1\" class=\"mt-2\"></canvas>\n");
      out.write("            </div>\n");
      out.write("         </div>\n");
      out.write("      </div>\n");
      out.write("      \n");
      out.write("   <div class=\"col-md-6 grid-margin stretch-card\">\n");
      out.write("      <div class=\"card\">\n");
      out.write("         <div class=\"card-body\">\n");
      out.write("             <div class=\"clearfix\">\n");
      out.write("                <h4 class=\"card-title float-left\">상품 테마 실시간 재고 현황</h4>\n");
      out.write("<!--                       <div id=\"visit-sale-chart-legend\" class=\"rounded-legend legend-horizontal legend-top-right float-right\"></div> -->\n");
      out.write("             </div>\n");
      out.write("                <canvas id=\"theme_stock1\" class=\"mt-2\"></canvas>\n");
      out.write("         </div>\n");
      out.write("      </div>\n");
      out.write(" \t</div>\n");
      out.write(" </div>\n");
      out.write(" \n");
      out.write(" \n");
      out.write(" <div class=\"row\">\n");
      out.write(" \t<div class=\"col-md-6 grid-margin stretch-card\">\n");
      out.write("        <div class=\"card\">\n");
      out.write("            <div class=\"card-body\">\n");
      out.write("               <h4 class=\"card-title\">");
      out.print(thisYear );
      out.write("년 이송 빈도 순위</h4>\n");
      out.write("                 <h3 class=\"card-subtitle\">경기도 광주 센터</h3>\n");
      out.write("                   <div class=\"table-responsive\">\n");
      out.write("                      <table class=\"table\">\n");
      out.write("                        <thead>\n");
      out.write("                        \t<tr>\n");
      out.write("                            <th> # </th>\n");
      out.write("                            <th> 상품코드 </th>\n");
      out.write("                            <th> 상품명 </th>\n");
      out.write("                            <th> 이송요청 건수 </th>\n");
      out.write("                          </tr>\n");
      out.write("                        </thead>\n");
      out.write("                        <tbody>\n");
      out.write("                            ");
 if(rtransfer1 == null || rtransfer1.isEmpty()){ 
      out.write("\t\n");
      out.write("\t\t\t");
      out.write("\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th colspan=\"10\"> 조회된 이송 상품이 없습니다.</th>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t\n");
      out.write("\t\t");
 
			} else { 
				
				for(RankedTransfer t : rtransfer1){
		
      out.write("\n");
      out.write("\t\t\t");
      out.write("\t\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td>");
      out.print(t.getRnum() );
      out.write("</td>\n");
      out.write("\t\t\t\t\t<td><a href=\"javascript:void(0)\" class=\"btn_popup_open\" style='color:#b66dff'> ");
      out.print(t.getP_code() );
      out.write("</a></td>\n");
      out.write("\t\t\t\t\t<td>");
      out.print(t.getP_name() );
      out.write("</td>\n");
      out.write("\t\t\t\t\t<td>");
      out.print(formatter.format((int)t.getT_amount()) );
      out.write("</td>\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t");
 		
				}
		   } 
		
      out.write("\n");
      out.write("                        </tbody>\n");
      out.write("                      </table>\n");
      out.write("                    </div>\n");
      out.write("                  </div>\n");
      out.write("                </div>\n");
      out.write("              </div>\n");
      out.write("              \n");
      out.write("\t<div class=\"col-md-6 grid-margin stretch-card\">\n");
      out.write("       <div class=\"card\">\n");
      out.write("          <div class=\"card-body\">\n");
      out.write("              <h4 class=\"card-title\">");
      out.print(thisYear );
      out.write("년 이송 빈도 순위</h4>\n");
      out.write("              <h3 class=\"card-subtitle\">대구 센터</h3>\n");
      out.write("                 <div class=\"table-responsive\">\n");
      out.write("                   <table class=\"table\">\n");
      out.write("                       <thead>\n");
      out.write("                          <tr>\n");
      out.write("                            <th> # </th>\n");
      out.write("                            <th> 상품코드 </th>\n");
      out.write("                            <th> 상품명 </th>\n");
      out.write("                            <th> 이송요청 건수 </th>\n");
      out.write("                          </tr>\n");
      out.write("                        </thead>\n");
      out.write("                        <tbody>\n");
      out.write("                            ");
 if(rtransfer2 == null || rtransfer2.isEmpty()){ 
      out.write("\t\n");
      out.write("\t\t\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th colspan=\"10\"> 조회된 이송 상품이 없습니다.</th>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t\n");
      out.write("\t\t");
 
			} else { 
				
				for(RankedTransfer t : rtransfer2){
		
      out.write("\t\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<td>");
      out.print(t.getRnum() );
      out.write("</td>\n");
      out.write("\t\t\t\t\t<td><a href=\"javascript:void(0)\" class=\"btn_popup_open\" style='color:#b66dff'>");
      out.print(t.getP_code() );
      out.write("</a></td>\n");
      out.write("\t\t\t\t\t<td>");
      out.print(t.getP_name() );
      out.write("</td>\n");
      out.write("\t\t\t\t\t<td>");
      out.print(t.getT_amount() );
      out.write("</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t");
 		
				}
		   } 
		
      out.write("\n");
      out.write("                        </tbody>\n");
      out.write("                      </table>\n");
      out.write("                    </div>\n");
      out.write("                  </div>\n");
      out.write("                </div>\n");
      out.write("              </div>\n");
      out.write("            </div>\n");
      out.write("             \n");
      out.write("<div class=\"row\"> \n");
      out.write("  <div class=\"col-md-12 grid-margin stretch-card\">\n");
      out.write("    <div class=\"card\">\n");
      out.write("       <div class=\"card-body\"> \n");
      out.write(" <h4 class=\"card-title\">2020년 최다 판매 상품 TOP10</h4>          \n");
      out.write(" <canvas id=\"bestSellers\"></canvas>             \n");
      out.write("       </div>\n");
      out.write(" \t</div>\n");
      out.write("  </div>\n");
      out.write("</div>\t     \n");
      out.write("           \n");
      out.write("<div class=\"row\">\n");
      out.write(" \t<div class=\"col-md-12 grid-margin stretch-card\">\n");
      out.write("        <div class=\"card\">\n");
      out.write("            <div class=\"card-body\">\n");
      out.write("                <h4 class=\"card-title\">");
      out.print(thisYear);
      out.write("년 최다 발주 매장</h4>\n");
      out.write("              \t\t<div class=\"table-responsive\">\n");
      out.write("                      <table class=\"table\">\n");
      out.write("                        <thead>\n");
      out.write("                          <tr>\n");
      out.write("                            <th> # </th>\n");
      out.write("                            <th> 매장코드 </th>\n");
      out.write("                            <th> 발주총액(원) </th>\n");
      out.write("                            <th> 매장명 </th>\n");
      out.write("                            <th> 매장 전화번호 </th>\n");
      out.write("                          </tr>\n");
      out.write("                        </thead>\n");
      out.write("                        <tbody>\n");
      out.write("                          ");
 if(rshops == null || rshops.isEmpty()){ 
      out.write("\t\n");
      out.write("\t\t\t");
      out.write("\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th colspan=\"10\"> 조회된 매장이 없습니다.</th>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t\n");
      out.write("\t\t");
 
			} else { 
				
				for(RankedShop r : rshops){
		
      out.write("\n");
      out.write("\t\t\t");
      out.write("\t\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<td>");
      out.print(r.getRank() );
      out.write("</td>\n");
      out.write("\t\t\t\t\t<td data-toggle=\"scode\" data-placement=\"top\" title=");
      out.print(r.getS_name());
      out.write(">\n");
      out.write("            \t\t<label class=\"badge badge-gradient-info\">");
      out.print(r.getS_code() );
      out.write("</label>\n");
      out.write("\n");
      out.write("\t\t\t\t\t<td>");
      out.print(formatter.format((int)r.getTotalsum()) );
      out.write("</td>\n");
      out.write("\t\t\t\t\t<td><label class=\"badge badge-gradient-danger\">");
      out.print(r.getS_name() );
      out.write("</label></td>\n");
      out.write("\t\t\t\t\t<td><a href=\"tel:");
      out.print(r.getS_tel());
      out.write('"');
      out.write('>');
      out.print(r.getS_tel());
      out.write("</a></td>\n");
      out.write("            \t</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t");
 		
				}
		   } 
		
      out.write("\n");
      out.write("                        </tbody>\n");
      out.write("                       </table>\n");
      out.write("                      </div>\n");
      out.write("                     </div>\n");
      out.write("                    </div>\n");
      out.write("                   </div>\n");
      out.write("                  </div>           \n");
      out.write(" \t\n");
      out.write(" \t\n");
      out.write(" \t\n");
      out.write("\t<!-- 레이어 팝업 시작 -->\n");
      out.write("\t<div class=\"popup_panel\">\t\n");
      out.write("\t <div class=\"popup_bg\"></div>\n");
      out.write("\t  <div class=\"popup_contents\" style=\"float: left;\">\n");
      out.write("\t   <!-- images/...jpg로 저장 -->\n");
      out.write("\t   <img id=\"p_image\" src=\"\" alt=\"\" />\n");
      out.write("\t   <div class=\"popup_contents2\">\n");
      out.write("\t   <!-- product : p_theme --> \n");
      out.write("\t   <span id=\"p_theme\"> </span>\n");
      out.write("\t   <!-- product : p_category -->\n");
      out.write("\t   <span id=\"p_category\"> </span>\n");
      out.write("\t   <!-- product : p_name-->\n");
      out.write("\t   <span id=\"p_name\"> </span>\n");
      out.write("\t   <hr />\n");
      out.write("\t   <!-- product : p_price -->\n");
      out.write("\t   <span id=\"p_price\" style=\"float:right\"> </span>\n");
      out.write("\t   <!-- qrcode-->\n");
      out.write("\t   <div id=\"qrDiv\" style=\"float: right; margin-top: 40px\">\n");
      out.write("\t   <img id=\"p_qr_image\" src=\"\" alt=\"\" style=\"width:130px; margin-right: -60px;\"/>\n");
      out.write("\t\t\t</div>\n");
      out.write("   \t\t</div>\n");
      out.write("\t  </div>\n");
      out.write("\t</div>\n");
      out.write("\t<!-- 레이어 팝업 끝 -->\n");
      out.write("\t\n");
      out.write("    <script> \n");
      out.write("$(function () {\n");
      out.write("\t\t\n");
      out.write("\t\t// 레이어팝업 \n");
      out.write("\t    var $panel = $(\".popup_panel\");\n");
      out.write("\t    var $panelContents = $panel.find(\".popup_contents\");\n");
      out.write("\t    \n");
      out.write("\t    //상품상세팝업 클릭했을때\n");
      out.write("\t    $(\".btn_popup_open\").on(\"click\", function(e) {\n");
      out.write("\t    \t//상품코드 준비\n");
      out.write("\t    \tvar pCode = $(this).text();\n");
      out.write("\t\t\tvar params = {pCode : pCode}; //서버로 보낼 파라미터\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$.post('");
      out.print(contextPath);
      out.write("/order/productDetail', $.param(params), function(responseJson){\n");
      out.write("\t\t\t\t//p_theme, p_category, p_name, p_price, p_qrImage\n");
      out.write("\n");
      out.write("\t\t\t\tvar obj = $.parseJSON(JSON.stringify(responseJson));\n");
      out.write("\n");
      out.write("\t\t\t\t$(\"#p_image\").attr(\"src\", obj.pImage); //파일서블릿 경로(상품이미지 서버위치 가져옴)\n");
      out.write("\t\t\t\t$(\"#p_theme\").text(\"[\" + obj.pTheme + \"]\");\n");
      out.write("\t\t\t\t$(\"#p_category\").text(\"[\" + obj.pCategory + \"]\");\n");
      out.write("\t\t\t\t$(\"#p_name\").text(obj.pName);\n");
      out.write("\t\t\t\t$(\"#p_price\").text((obj.pPrice).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")); //가격 콤마찍기 \n");
      out.write("\t\t\t\t$(\"#p_qr_image\").attr(\"src\", obj.pQrImage); //파일서블릿 경로(상품QR이미지 서버위치 가져옴)\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t\n");
      out.write("\t        // 팝업 가운데 설정(가로)\n");
      out.write("\t        if ($panelContents.outerWidth() < $(document).width()) {\n");
      out.write("\t            $panelContents.css(\"margin-left\", \"-\" + $panelContents.outerWidth() / 2 + \"px\");\n");
      out.write("\t        } else {\n");
      out.write("\t            $panelContents.css(\"left\", \"0px\");\n");
      out.write("\t        }\n");
      out.write("\n");
      out.write("\t        // 팝업 가운데 설정(세로)\n");
      out.write("\t        if ($panelContents.outerHeight() < $(document).height()) {\n");
      out.write("\t            $panelContents.css(\"margin-top\", \"-\" + $panelContents.outerHeight() / 2 + \"px\");\n");
      out.write("\t        } else {\n");
      out.write("\t            $panelContents.css(\"top\", \"0px\");\n");
      out.write("\t        }\n");
      out.write("\t        // 레이어 팝업 열기\n");
      out.write("\t        $panel.fadeIn();\n");
      out.write("\t        \n");
      out.write("\t    });\n");
      out.write("\t    // 팝업 닫기 이벤트 정의\n");
      out.write("\t    $(\"#btn_popup_close\").on(\"click\", popupClose);\n");
      out.write("\n");
      out.write("\t    // 팝업 배경 클릭 이벤트 정의\n");
      out.write("\t    $panel.find(\".popup_bg\").on(\"click\", popupClose);\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\t\tfunction popupClose(e) {\n");
      out.write("\t\t    $panel.fadeOut();\n");
      out.write("\t\t    // 이벤트 기본 동작 중단\n");
      out.write("\t\t    e.preventDefault();\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t})\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\n");
      out.write("    let ylabels = [\"");
      out.print(thisYear-3);
      out.write("\", \"");
      out.print(thisYear-2);
      out.write("\", \"");
      out.print(thisYear-1);
      out.write("\", \"");
      out.print(thisYear);
      out.write("\"];\n");
      out.write("    let yrevenue1 = [0,0,0,0];\n");
      out.write("    //경기도 광주 센터 연매출\n");
      out.write("    let yrevenue2 = [0,0,0,0];\n");
      out.write("    //대구 센터 연매출\n");
      out.write("    let rchart = document.getElementById('rchart').getContext('2d');\n");
      out.write("    \n");
      out.write("    ");

    Iterator<Entry<Integer, Integer>> reventries1 = annualreven1.entrySet().iterator();
  	while(reventries1.hasNext()){
  	    Map.Entry<Integer, Integer> entry = reventries1.next();
  	    
  	    for(int i=0; i<4; i++){
  	    	if(entry.getKey()==thisYear-3+i)
  	    		{
      out.write("yrevenue1[");
      out.print(i);
      out.write(']');
      out.write('=');
      out.print(entry.getValue());
      out.write(";\n");
      out.write("  \t    \t\t\t\t\t");
}
  	    }
  	}
      out.write("\n");
      out.write("  \t\n");
      out.write("  \t");

    Iterator<Entry<Integer, Integer>> reventries2 = annualreven2.entrySet().iterator();
  	while(reventries2.hasNext()){
  	    Map.Entry<Integer, Integer> entry = reventries2.next();
  	    
  	    for(int i=0; i<4; i++){
  	    	if(entry.getKey()==thisYear-3+i)
  	    		{
      out.write("yrevenue2[");
      out.print(i);
      out.write(']');
      out.write('=');
      out.print(entry.getValue());
      out.write(";\n");
      out.write("  \t    \t\t\t");
}
  	    }
  	}
      out.write("\n");
      out.write("    \n");
      out.write("    let revenueChart = new Chart(rchart, {\n");
      out.write("        type: 'line',\n");
      out.write("        data: {labels: ylabels,\n");
      out.write("        \tdatasets:[{\n");
      out.write("        \t\tlabel: \"경기도 광주 센터\",\n");
      out.write("//         \t\tbackgroundColor: '#fe7096',\n");
      out.write("        \t\tborderColor: '#58c5ed',\n");
      out.write("        \t\tdata: yrevenue1,\n");
      out.write("        \t},{\n");
      out.write("        \t\tlabel: \"대구 센터\",\n");
      out.write("//         \t\tbackgroundColor: \"#ffbb96\",\n");
      out.write("        \t\tborderColor: \"#9a55ff\",\n");
      out.write("        \t\tdata: yrevenue2,\n");
      out.write("        \t}\n");
      out.write("        \t]\n");
      out.write("        \t\n");
      out.write("        },\n");
      out.write("        options: {\n");
      out.write("            responsive: true,\n");
      out.write("//         tooltips: {\n");
      out.write("//           callbacks: {\n");
      out.write("//                 label: function(tooltipItem, data) {\n");
      out.write("//                     var value = data.datasets[0].data[tooltipItem.index];\n");
      out.write("//                     if(parseInt(value) >= 1000){\n");
      out.write("//                                return '￦'+value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n");
      out.write("//                             } else {\n");
      out.write("//                                return '￦'+value;\n");
      out.write("//                             }\n");
      out.write("//                 }\n");
      out.write("//           } // end callbacks:\n");
      out.write("//         }, //end tooltips                \n");
      out.write("            scales: {\n");
      out.write("                yAxes: [{\n");
      out.write("                    ticks: {\n");
      out.write("                        beginAtZero:true,\n");
      out.write("                        callback: function(value, index, values) {\n");
      out.write("                            if(parseInt(value) >= 1000){\n");
      out.write("                               return '￦'+value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n");
      out.write("                            } else {\n");
      out.write("                               return '￦'+value;\n");
      out.write("                            }\n");
      out.write("                       }                            \n");
      out.write("                    }\n");
      out.write("                }]\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        });\n");
      out.write("    \n");
      out.write("   \n");
      out.write("    \n");
      out.write("    \n");
      out.write("    function updateYearly(){\n");
      out.write("    \trevenueChart.data.datasets[0].label = \"경기도 광주 센터\";\n");
      out.write("    \trevenueChart.data.datasets[1].label = \"대구 센터\";\n");
      out.write("    \trevenueChart.data.datasets[0].data = yrevenue1;\n");
      out.write("    \trevenueChart.data.datasets[1].data = yrevenue2;    \t\n");
      out.write("    \trevenueChart.data.labels = ylabels;\n");
      out.write("\n");
      out.write("    \t\n");
      out.write("    \trevenueChart.update();\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    \tlet mlabels=[\"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\"];\n");
      out.write("    \tlet mrevenue1=[0,0,0,0,0,0,0,0,0,0,0,0];\n");
      out.write("    \tlet mrevenue2=[0,0,0,0,0,0,0,0,0,0,0,0];\n");
      out.write("    \t\n");
      out.write("    \t");

        Iterator<Entry<Integer, Integer>> mentries1 =  monthreven1.entrySet().iterator();
      	while(mentries1.hasNext()){
      	    Map.Entry<Integer, Integer> entry = mentries1.next();
      	    
      	    for(int i=0; i<12; i++){
      	    	if(entry.getKey()==i+1)
      	    		{
      out.write("mrevenue1[");
      out.print(i);
      out.write(']');
      out.write('=');
      out.print(entry.getValue());
      out.write(";\n");
      out.write("      \t    \t\t\t\t\t");
}
      	    }
      	}
      out.write("\n");
      out.write("      \t");

        Iterator<Entry<Integer, Integer>> mentries2 =  monthreven2.entrySet().iterator();
      	while(mentries2.hasNext()){
      	    Map.Entry<Integer, Integer> entry = mentries2.next();
      	    
      	    for(int i=0; i<12; i++){
      	    	if(entry.getKey()==i+1)
      	    		{
      out.write("mrevenue2[");
      out.print(i);
      out.write(']');
      out.write('=');
      out.print(entry.getValue());
      out.write(";    \t    \t\t\t\n");
      out.write("      \t    \t\t\t\t\t");
}
      	    }
      	}
      out.write("\n");
      out.write("    \n");
      out.write("    function updateMonthly(){\n");
      out.write("    \trevenueChart.data.datasets[0].label = \"");
      out.print(thisYear);
      out.write("\";\n");
      out.write("    \trevenueChart.data.datasets[1].label = \"");
      out.print(thisYear-1);
      out.write("\";    \t\n");
      out.write("    \trevenueChart.data.labels = mlabels;\n");
      out.write("    \trevenueChart.data.datasets[0].data = mrevenue1;\n");
      out.write("    \trevenueChart.data.datasets[1].data = mrevenue2;\n");
      out.write("    \t\n");
      out.write("    \trevenueChart.update();\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    let drevenue1 = [0, 0, 0, 0, 0, 0, 0];\n");
      out.write("    let drevenue2 = [0, 0, 0, 0, 0, 0, 0];\n");
      out.write("    let dlabels = [];\n");
      out.write("    \n");
      out.write("    ");

    java.util.Calendar cal = java.util.Calendar.getInstance();
	java.text.DateFormat format1 = new java.text.SimpleDateFormat("MMdd");
	ArrayList<String> datelist = new ArrayList<String>();
	
	datelist.add(format1.format(cal.getTime()));
	
	for(int i=0; i<6; i++) {
	cal.add(cal.DATE, -1); 
	String day = format1.format(cal.getTime());
	datelist.add(day);
	}
	
	for(int i=6; i>=0; i--){
		
      out.write("dlabels.push('");
      out.print(datelist.get(i));
      out.write("'); \t\n");
      out.write("   \t\t");
}
    
  //entrySet().iterator()
  	Iterator<Entry<String, Integer>> dreventries1 = dailyreven1.entrySet().iterator();
  	while(dreventries1.hasNext()){
  	    Map.Entry<String, Integer> entry = dreventries1.next();
  	  	String datekey = String.valueOf(entry.getKey());
  	  	String key = datekey.substring(4);
  	  	int getValue = entry.getValue();

  	   		for(int j=0; j<7; j++){
  	    		if(datelist.get(j).equals(key)){
      out.write("\n");
      out.write("  \t    \t\t\tdrevenue1[");
      out.print(6-j);
      out.write(']');
      out.write('=');
      out.write('(');
      out.print(getValue);
      out.write(");\n");
      out.write("  \t    \t\t");
} 
  				
  	   		}
  			}
      out.write("\n");
      out.write("  \t\n");
      out.write("\t  \t\n");
      out.write("  //entrySet().iterator()\n");
      out.write("  ");
Iterator<Entry<String, Integer>> dreventries2 = dailyreven2.entrySet().iterator();
  	while(dreventries2.hasNext()){
  	    Map.Entry<String, Integer> entry = dreventries2.next();
  	  	String datekey2 = String.valueOf(entry.getKey());
  	  	String key2 = datekey2.substring(4);
  	  	int getValue2 = entry.getValue();
  	   		for(int j=0; j<7; j++){
  	    		if(datelist.get(j).equals(key2)){
      out.write("\n");
      out.write("  \t    \t\t\tdrevenue2[");
      out.print(6-j);
      out.write(']');
      out.write('=');
      out.write('(');
      out.print(getValue2);
      out.write(");\n");
      out.write("  \t    \t\t");
} 
  	   		}
  			}
  	   
      out.write("\n");
      out.write("      \t\n");
      out.write("    function updateDaily(){\n");
      out.write("    \trevenueChart.data.datasets[0].label = \"경기도 광주 센터\";\n");
      out.write("    \trevenueChart.data.datasets[1].label = \"대구 센터\";\n");
      out.write("    \trevenueChart.data.datasets[0].data = drevenue1;\n");
      out.write("    \trevenueChart.data.datasets[1].data = drevenue2;\n");
      out.write("    \trevenueChart.data.labels = dlabels;\n");
      out.write("    \t\n");
      out.write("    \trevenueChart.update();\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    let labels1 = [];\n");
      out.write("    let data1 = [];\n");
      out.write("    \n");
      out.write("  \t");
//entrySet().iterator()
  	Iterator<Entry<String, Integer>> cEntries = scategory.entrySet().iterator();
  	while(cEntries.hasNext()){
  	    Map.Entry<String, Integer> entry = cEntries.next();
      out.write("\n");
      out.write("  \t   \tlabels1.push('");
      out.print(entry.getKey());
      out.write("');\n");
      out.write("  \t   \tdata1.push(");
      out.print(entry.getValue());
      out.write(");\n");
      out.write("  \t");
}
    
      out.write("\n");
      out.write("    \n");
      out.write("    \n");
      out.write("    let colors1 = ['#9a55ff', '#fe7096', \"#68d2c6\", \"#58c5ed\", \"#fed711\", \"#ffbb96\", \"#68d2c6\", \"#58c5ed\", \"#fed711\", \"#ffbb96\"];\n");
      out.write("    \n");
      out.write("    let labels2 = [];\n");
      out.write("    let data2 = [];\n");
      out.write("    \n");
      out.write("    ");
//entrySet().iterator()
  	Iterator<Entry<String, Integer>> tEntries = stheme.entrySet().iterator();
  	while(tEntries.hasNext()){
  	    Map.Entry<String, Integer> entry = tEntries.next();
      out.write("\n");
      out.write("  \t   \tlabels2.push('");
      out.print(entry.getKey());
      out.write("');\n");
      out.write("  \t   \tdata2.push(");
      out.print(entry.getValue());
      out.write(");\n");
      out.write("  \t");
}
    
      out.write("\n");
      out.write("    \n");
      out.write("    \n");
      out.write("    let c_stock1 = document.getElementById(\"c_stock1\").getContext('2d');\n");
      out.write("    \n");
      out.write("    let stock1 = new Chart(c_stock1, {\n");
      out.write("        type:'doughnut',\n");
      out.write("        data:{\n");
      out.write("            labels: labels1,\n");
      out.write("            datasets: [{\n");
      out.write("                data: data1,\n");
      out.write("                backgroundColor: colors1\n");
      out.write("            }]\n");
      out.write("        },\n");
      out.write("        options: {\n");
      out.write("            title: {\n");
      out.write("                text: \"센터 통합\",\n");
      out.write("                display: true\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("    \n");
      out.write("\n");
      out.write("\tlet theme_stock1 = document.getElementById(\"theme_stock1\").getContext('2d');\n");
      out.write("    \n");
      out.write("    let stock3 = new Chart(theme_stock1, {\n");
      out.write("    \ttype:'doughnut',\n");
      out.write("         data:{\n");
      out.write("             labels: labels2,\n");
      out.write("             datasets: [{\n");
      out.write("                 data: data2,\n");
      out.write("                 backgroundColor: colors1\n");
      out.write("             }]\n");
      out.write("         },\n");
      out.write("         options: {\n");
      out.write("             title: {\n");
      out.write("                 text: \"센터 통합\",\n");
      out.write("                 display: true\n");
      out.write("             }\n");
      out.write("         }\n");
      out.write("     });\n");
      out.write("    \n");
      out.write("    let ilabel1 = [];\n");
      out.write("    let ilabel2 = [];\n");
      out.write("    \n");
      out.write("    let idata1 = [0,0,0,0,0,0,0,0,0,0,0,0];\n");
      out.write("    let idata2 = [0,0,0,0,0,0,0,0,0,0,0,0];\n");
      out.write("    \n");
      out.write("    let olabel1 = [];\n");
      out.write("    let olabel2 = [];\n");
      out.write("    \n");
      out.write("    let odata1 = [0,0,0,0,0,0,0,0,0,0,0,0];\n");
      out.write("    let odata2 = [0,0,0,0,0,0,0,0,0,0,0,0];\n");
      out.write("    \n");
      out.write("    \n");
      out.write("    ");
//entrySet().iterator()
  	Iterator<Entry<Integer, Integer>> inEntries1 = ainbound1.entrySet().iterator();
  	while(inEntries1.hasNext()){
  	    Map.Entry<Integer, Integer> entry = inEntries1.next();
  	    
  	    for(int i=0; i<4; i++){
  	    	if(entry.getKey()==thisYear-3+i)
  	    		{
      out.write("idata1[");
      out.print(i);
      out.write(']');
      out.write('=');
      out.print(entry.getValue());
      out.write(";\n");
      out.write("  \t    \t\t\t");
}
  	    }
  	}
    
      out.write("\n");
      out.write("    ");
//entrySet().iterator()
  	Iterator<Entry<Integer, Integer>> inEntries2 = ainbound2.entrySet().iterator();
  	while(inEntries2.hasNext()){
  	    Map.Entry<Integer, Integer> entry = inEntries2.next();
  	    
  	    for(int i=0; i<4; i++){
  	    	if(entry.getKey()==thisYear-3+i)
  	    		{
      out.write("idata2[");
      out.print(i);
      out.write(']');
      out.write('=');
      out.print(entry.getValue());
      out.write(";\n");
      out.write("  \t    \t\t\t");
}
  	    }
  	}
    
      out.write("\n");
      out.write("  \t\n");
      out.write("\tlet inbound = document.getElementById(\"inbound\").getContext('2d');\n");
      out.write("    \n");
      out.write("    let inboundChart = new Chart(inbound, {\n");
      out.write("    \ttype:'bar',\n");
      out.write("    \tdata: {labels: ylabels,\n");
      out.write("        \tdatasets:[{\n");
      out.write("        \t\tlabel: \"경기도 광주 센터\",\n");
      out.write("        \t\tbackgroundColor: '#fe7096',\n");
      out.write("        \t\tborderColor: '#58c5ed',\n");
      out.write("        \t\tdata: idata1,\n");
      out.write("        \t},{\n");
      out.write("        \t\tlabel: \"대구 센터\",\n");
      out.write("        \t\tbackgroundColor: \"#ffbb96\",\n");
      out.write("        \t\tborderColor: \"#9a55ff\",\n");
      out.write("        \t\tdata: idata2,\n");
      out.write("        \t}\n");
      out.write("        \t]\n");
      out.write("        \t\n");
      out.write("        },\n");
      out.write("         options: {\n");
      out.write("             title: {\n");
      out.write("                 text: \"생산 입고량 추이\",\n");
      out.write("                 display: true\n");
      out.write("             }\n");
      out.write("         }\n");
      out.write("     });\n");
      out.write("    \n");
      out.write("    ");
//entrySet().iterator()
  	Iterator<Entry<Integer, Integer>> outEntries1 = aoutbound1.entrySet().iterator();
  	while(outEntries1.hasNext()){
  	    Map.Entry<Integer, Integer> entry = outEntries1.next();
  	    
  	    for(int i=0; i<4; i++){
  	    	if(entry.getKey()==thisYear-3+i)
  	    		{
      out.write("odata1[");
      out.print(i);
      out.write(']');
      out.write('=');
      out.print(entry.getValue());
      out.write(";\n");
      out.write("  \t    \t\t\t");
}
  	    }
  	}
    
      out.write("\n");
      out.write("    ");
//entrySet().iterator()
  	Iterator<Entry<Integer, Integer>> outEntries2 = aoutbound2.entrySet().iterator();
  	while(outEntries2.hasNext()){
  	    Map.Entry<Integer, Integer> entry = outEntries2.next();
  	    
  	    for(int i=0; i<4; i++){
  	    	if(entry.getKey()==thisYear-3+i)
  	    		{
      out.write("odata2[");
      out.print(i);
      out.write(']');
      out.write('=');
      out.print(entry.getValue());
      out.write(";\n");
      out.write("  \t    \t\t\t");
}
  	    }
  	}
    
      out.write("\n");
      out.write("    \n");
      out.write("    \n");
      out.write("\tlet outbound = document.getElementById(\"outbound\").getContext('2d');\n");
      out.write("    \n");
      out.write("    let outboundChart = new Chart(outbound, {\n");
      out.write("    \ttype:'bar',\n");
      out.write("    \tdata: {labels: ylabels,\n");
      out.write("        \tdatasets:[{\n");
      out.write("        \t\tlabel: \"경기도 광주 센터\",\n");
      out.write("        \t\tbackgroundColor: '#fe7096',\n");
      out.write("        \t\tborderColor: '#58c5ed',\n");
      out.write("        \t\tdata: odata1,\n");
      out.write("        \t},{\n");
      out.write("        \t\tlabel: \"대구 센터\",\n");
      out.write("        \t\tbackgroundColor: \"#ffbb96\",\n");
      out.write("        \t\tborderColor: \"#9a55ff\",\n");
      out.write("        \t\tdata: odata2,\n");
      out.write("        \t}\n");
      out.write("        \t]\n");
      out.write("        \t\n");
      out.write("        },\n");
      out.write("         options: {\n");
      out.write("             title: {\n");
      out.write("                 text: \"판매 출고량 추이\",\n");
      out.write("                 display: true\n");
      out.write("             }\n");
      out.write("         }\n");
      out.write("     });\n");
      out.write("    \n");
      out.write("  \n");
      out.write("\tlet bestSellers = document.getElementById(\"bestSellers\").getContext('2d');\n");
      out.write("    let bestLabels = [];\n");
      out.write("\tlet bestData = [];\n");
      out.write("\t\n");
      out.write("\t");

	for(MostSoldProduct m : mproducts){
      out.write("\n");
      out.write("\t\t\n");
      out.write("\t\tbestLabels.push('");
      out.print(m.getP_name());
      out.write("');\n");
      out.write("\t\tbestData.push(");
      out.print(m.getQuantity());
      out.write(");\n");
      out.write("\t");
}
      out.write("\n");
      out.write("\t\n");
      out.write("    \n");
      out.write("    let polarAreaChart = new Chart(bestSellers, {\n");
      out.write("    \ttype:'polarArea',\n");
      out.write("         data:{\n");
      out.write("             labels: bestLabels,\n");
      out.write("             datasets: [{\n");
      out.write("                 data: bestData,\n");
      out.write("                 backgroundColor: colors1\n");
      out.write("             }]\n");
      out.write("         },\n");
      out.write("         options: {\n");
      out.write("             title: {\n");
      out.write("                 text: \"센터 통합\",\n");
      out.write("                 display: true\n");
      out.write("             }\n");
      out.write("         }\n");
      out.write("     });  \n");
      out.write("    \n");
      out.write("    </script>\n");
      out.write("\n");
      out.write("     \n");
      out.write("          \n");
      out.write("          ");
      out.write("\n");
      out.write("                   \n");
      out.write("          \n");
      out.write("          <!-- content-wrapper ends -->\n");
      out.write("    \t   ");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<!-- partial:partials/_footer.html -->\r\n");
      out.write("<footer class=\"footer\">\r\n");
      out.write("  <div class=\"d-sm-flex justify-content-center justify-content-sm-between\">\r\n");
      out.write("    <span class=\"text-muted text-center text-sm-left d-block d-sm-inline-block\">Copyright © 2017 <a href=\"#\" target=\"_blank\">STOCKer</a>. All rights reserved.</span>\r\n");
      out.write("    <i class=\"mdi mdi-heart text-danger\" id=\"topBtn\"></i>\r\n");
      out.write("  </div>\r\n");
      out.write("</footer>");
      out.write("\n");
      out.write("          <!-- partial -->\n");
      out.write("        </div>\n");
      out.write("        <!-- main-panel ends -->\n");
      out.write("      </div>\n");
      out.write("      <!-- page-body-wrapper ends -->\n");
      out.write("    </div>\n");
      out.write("    <!-- container-scroller -->\n");
      out.write("\t");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<!-- plugins:js -->\r\n");
      out.write("<script src=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/vendors/js/vendor.bundle.base.js\"></script>\r\n");
      out.write("<!-- endinject -->\r\n");
      out.write("<!-- Plugin js for this page -->\r\n");
      out.write("<script src=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/vendors/chart.js/Chart.min.js\"></script>\r\n");
      out.write("<!-- End plugin js for this page -->\r\n");
      out.write("<!-- inject:js -->\r\n");
      out.write("<script src=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/js/off-canvas.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/js/hoverable-collapse.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/js/misc.js\"></script>\r\n");
      out.write("<!-- endinject -->\r\n");
      out.write("<!-- Custom js for this page -->\r\n");
      out.write("<script src=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/js/dashboard.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(  request.getContextPath() );
      out.write("/resources/bootstrap/js/todolist.js\"></script>\r\n");
      out.write("  <script>\r\n");
      out.write("  var topEle = $('#topBtn');\r\n");
      out.write("  var delay = 1000;\r\n");
      out.write("  \r\n");
      out.write("  topEle.on('click', function() {\r\n");
      out.write("    $('html, body').stop().animate({scrollTop: 0}, delay);\r\n");
      out.write("  });\r\n");
      out.write("  </script>\r\n");
      out.write("<!-- End custom js for this page -->");
      out.write("\n");
      out.write("  </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
